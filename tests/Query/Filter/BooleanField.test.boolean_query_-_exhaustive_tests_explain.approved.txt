Results of parsing and explaining boolean expressions




Input:
'"description includes d1" AND "description includes d2"'
=>
Result:
  "description includes d1" AND "description includes d2" =>
    AND (All of):
      description includes d1
      description includes d2


--------------------------------------------------------


Input:
'( (description includes a) AND (description includes b) ) AND (description includes c)'
=>
Result:
  ( (description includes a) AND (description includes b) ) AND (description includes c) =>
    AND (All of):
      description includes a
      description includes b
      description includes c


--------------------------------------------------------


Input:
'( (description includes a) AND (description includes b) AND (description includes c) ) OR ( (description includes d) AND (description includes e) AND (description includes f) )'
=>
Result:
  ( (description includes a) AND (description includes b) AND (description includes c) ) OR ( (description includes d) AND (description includes e) AND (description includes f) ) =>
    OR (At least one of):
      AND (All of):
        description includes a
        description includes b
        description includes c
      AND (All of):
        description includes d
        description includes e
        description includes f


--------------------------------------------------------


Input:
'( (description includes a) OR (description includes b) ) OR (description includes c)'
=>
Result:
  ( (description includes a) OR (description includes b) ) OR (description includes c) =>
    OR (At least one of):
      description includes a
      description includes b
      description includes c


--------------------------------------------------------


Input:
'( (description includes a) OR (description includes b) OR (description includes c) ) AND ( (description includes d) OR (description includes e) OR (description includes f) )'
=>
Result:
  ( (description includes a) OR (description includes b) OR (description includes c) ) AND ( (description includes d) OR (description includes e) OR (description includes f) ) =>
    AND (All of):
      OR (At least one of):
        description includes a
        description includes b
        description includes c
      OR (At least one of):
        description includes d
        description includes e
        description includes f


--------------------------------------------------------


Input:
'( (filter by function task.description.includes('a')) OR (filter by function task.description.includes('b')) OR (filter by function task.description.includes('c')) ) AND ( (filter by function task.description.includes('d')) OR (filter by function task.description.includes('e')) OR (filter by function task.description.includes('f')) )'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------


Input:
'( description includes a ) AND ( (description includes b) AND (description includes c) )'
=>
Result:
  ( description includes a ) AND ( (description includes b) AND (description includes c) ) =>
    AND (All of):
      description includes a
      AND (All of):
        description includes b
        description includes c


--------------------------------------------------------


Input:
'( description includes a ) OR ( (description includes b) OR (description includes c) )'
=>
Result:
  ( description includes a ) OR ( (description includes b) OR (description includes c) ) =>
    OR (At least one of):
      description includes a
      OR (At least one of):
        description includes b
        description includes c


--------------------------------------------------------


Input:
'(((((description includes #context/location1)))))'
=>
Result:
  (((((description includes #context/location1))))) =>
    description includes #context/location1


--------------------------------------------------------


Input:
'(description includes #context/location1)'
=>
Result:
  (description includes #context/location1) =>
    description includes #context/location1


--------------------------------------------------------


Input:
'(description includes #context/location1) OR (description includes #context/location2 ) OR (  description includes #context/location3 ) OR   (  description includes #context/location4 )'
=>
Result:
  (description includes #context/location1) OR (description includes #context/location2 ) OR (  description includes #context/location3 ) OR   (  description includes #context/location4 ) =>
    OR (At least one of):
      description includes #context/location1
      description includes #context/location2
      description includes #context/location3
      description includes #context/location4


--------------------------------------------------------


Input:
'(description includes 1) AND (description includes 2) AND (description includes 3)'
=>
Result:
  (description includes 1) AND (description includes 2) AND (description includes 3) =>
    AND (All of):
      description includes 1
      description includes 2
      description includes 3


--------------------------------------------------------


Input:
'(description includes 1) AND (description includes 2) AND (description includes 3) AND (description includes 4) AND (description includes 5) AND (description includes 6) AND (description includes 7) AND (description includes 8) AND (description includes 9)'
=>
Result:
  (description includes 1) AND (description includes 2) AND (description includes 3) AND (description includes 4) AND (description includes 5) AND (description includes 6) AND (description includes 7) AND (description includes 8) AND (description includes 9) =>
    AND (All of):
      description includes 1
      description includes 2
      description includes 3
      description includes 4
      description includes 5
      description includes 6
      description includes 7
      description includes 8
      description includes 9


--------------------------------------------------------


Input:
'(description includes 1)   AND   (description includes 2)   AND   (description includes 3)   AND   (description includes 4)   AND   (description includes 5)   AND   (description includes 6)   AND   (description includes 7)   AND   (description includes 8)   AND   (description includes 9)'
=>
Result:
  (description includes 1)   AND   (description includes 2)   AND   (description includes 3)   AND   (description includes 4)   AND   (description includes 5)   AND   (description includes 6)   AND   (description includes 7)   AND   (description includes 8)   AND   (description includes 9) =>
    AND (All of):
      description includes 1
      description includes 2
      description includes 3
      description includes 4
      description includes 5
      description includes 6
      description includes 7
      description includes 8
      description includes 9


--------------------------------------------------------


Input:
'(description includes d1) AND (priority medium)'
=>
Result:
  (description includes d1) AND (priority medium) =>
    AND (All of):
      description includes d1
      priority is medium


--------------------------------------------------------


Input:
'(description includes d1) AND NOT (description includes d2)'
=>
Result:
  (description includes d1) AND NOT (description includes d2) =>
    AND (All of):
      description includes d1
      NOT:
        description includes d2


--------------------------------------------------------


Input:
'(description includes d1) AND NOT (priority medium)'
=>
Result:
  (description includes d1) AND NOT (priority medium) =>
    AND (All of):
      description includes d1
      NOT:
        priority is medium


--------------------------------------------------------


Input:
'(description includes d1) OR (description includes d2)'
=>
Result:
  (description includes d1) OR (description includes d2) =>
    OR (At least one of):
      description includes d1
      description includes d2


--------------------------------------------------------


Input:
'(description includes d1) OR (description includes d2) OR (priority medium)'
=>
Result:
  (description includes d1) OR (description includes d2) OR (priority medium) =>
    OR (At least one of):
      description includes d1
      description includes d2
      priority is medium


--------------------------------------------------------


Input:
'(description includes d1) OR (priority medium)'
=>
Result:
  (description includes d1) OR (priority medium) =>
    OR (At least one of):
      description includes d1
      priority is medium


--------------------------------------------------------


Input:
'(description includes d1) OR NOT (description includes d2)'
=>
Result:
  (description includes d1) OR NOT (description includes d2) =>
    OR (At least one of):
      description includes d1
      NOT:
        description includes d2


--------------------------------------------------------


Input:
'(description includes d1) OR NOT (priority medium)'
=>
Result:
  (description includes d1) OR NOT (priority medium) =>
    OR (At least one of):
      description includes d1
      NOT:
        priority is medium


--------------------------------------------------------


Input:
'(description includes d1) XOR (description includes d2)'
=>
Result:
  (description includes d1) XOR (description includes d2) =>
    XOR (Exactly one of):
      description includes d1
      description includes d2


--------------------------------------------------------


Input:
'(description includes d1) XOR (priority medium)'
=>
Result:
  (description includes d1) XOR (priority medium) =>
    XOR (Exactly one of):
      description includes d1
      priority is medium


--------------------------------------------------------



Input:
'AND (description includes d1)'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------


Input:
'NOT (description blahblah d1)'
=>
Result:
couldn't parse sub-expression 'description blahblah d1'

--------------------------------------------------------


Input:
'NOT (description includes d1)'
=>
Result:
  NOT (description includes d1) =>
    NOT:
      description includes d1


--------------------------------------------------------


Input:
'NOT (happens before blahblahblah)'
=>
Result:
couldn't parse sub-expression 'happens before blahblahblah': do not understand happens date

--------------------------------------------------------


Input:
'OR (description includes d1)'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------


Input:
'(description includes SHOULD NOT BE RECOGNISED AS A BOOLEAN)AND(description includes BECAUSE THERE ARE NO SPACES AROUND THE 'AND' OPERATOR)'
=>
Result:
malformed boolean query -- Unexpected character: A. A closing parenthesis should be followed by another closing parenthesis or whitespace (check the documentation for guidelines)

--------------------------------------------------------



Input:
'(path includes (some example) OR (path includes )some example()'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------


Input:
'(path includes (some example)) OR (path includes )some example()'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------


Input:
'(path includes )some example() OR (path includes (some example))'
=>
Result:
malformed boolean query -- Unexpected character: s. A closing parenthesis should be followed by another closing parenthesis or whitespace (check the documentation for guidelines)

--------------------------------------------------------


Input:
'(path includes ()some example()) OR (path includes ((some example)))'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------



Input:
'( description regex matches /(buy|order|voucher|lakeland|purchase|\spresent)/i ) OR ( path includes Home/Shopping )'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------


Input:
'( filter by function ! 'NON_TASK,CANCELLED'.includes(task.status.type) ) OR ( filter by function const date = task.due.moment; return date ? !date.isValid() : false; ) OR ( filter by function task.due.moment?.isSameOrBefore(moment(), 'day') || false ) OR ( filter by function task.urgency.toFixed(2) === 1.95.toFixed(2) ) OR ( filter by function (!task.isRecurring) && task.originalMarkdown.includes('🔁') ) OR ( filter by function task.file.path.toLocaleLowerCase() === 'TASKS RELEASES/4.1.0 RELEASE.MD'.toLocaleLowerCase() ) OR ( filter by function const taskDate = task.due.moment; const now = moment(); return taskDate?.isSame(now, 'day') || ( !taskDate && task.heading?.includes(now.format('YYYY-MM-DD')) ) || false ) OR ( filter by function const wanted = '#context/home'; return task.heading?.includes(wanted) || task.tags.find( (tag) => tag === wanted ) && true || false; )'
=>
Result:
malformed boolean query -- Invalid token (check the documentation for guidelines)

--------------------------------------------------------


